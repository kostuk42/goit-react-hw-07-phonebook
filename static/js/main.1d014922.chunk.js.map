{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/App/App.module.css","redux/operations.js","redux/contactSlice.js","redux/filterSlice.js","redux/store.js","redux/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App/App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","handleError","e","api","toast","error","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","rejectWithValue","fetchContacts","createAsyncThunk","_","thunkAPI","a","get","response","data","addContact","name","phone","formRef","post","current","reset","success","deleteContact","id","delete","handlePending","state","isLoading","handleRejected","action","payload","contactsReducer","createSlice","initialState","items","deletingId","extraReducers","pending","fulfilled","rejected","push","console","log","meta","arg","index","findIndex","contact","splice","reducer","filterSlice","reducers","updateFilter","actions","filterReducer","store","configureStore","contacts","filter","getContacts","getFilter","getIsLoading","getDeletingId","ContactForm","useSelector","dispatch","useDispatch","useRef","className","styles","form","onSubmit","event","preventDefault","target","value","find","toLowerCase","alert","ref","type","required","disabled","ContactList","useEffect","filteredContacts","normalizedFilter","includes","getFilteredContacts","list","map","onClick","Filter","label","onChange","App","container","ReactDOM","render","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,4B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,4B,mBCAzBD,EAAOC,QAAU,CAAC,MAAQ,wB,mBCA1BD,EAAOC,QAAU,CAAC,UAAY,yB,iICI9BC,IAAMC,SAASC,QAAU,kDAEzB,I,EAAMC,EAAc,SAACC,EAAGC,GAWpB,OAVAC,IAAMC,MAAMH,EAAEI,QAAS,CACnBC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,UAEJZ,EAAIa,gBAAgBd,EAAEI,UAGpBW,EAAgBC,YACzB,oBADyC,uCAEzC,WAAOC,EAAGC,GAAV,eAAAC,EAAA,+EAE+BvB,IAAMwB,IAAI,aAFzC,cAEcC,EAFd,yBAGeA,EAASC,MAHxB,gCAKQvB,EAAY,EAAD,GAAImB,GALvB,yDAFyC,yDAYhCK,EAAaP,YACtB,sBADsC,uCAEtC,aAA+BE,GAA/B,qBAAAC,EAAA,6DAAQK,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,QAArB,kBAE+B9B,IAAM+B,KAAK,YAAa,CAACH,OAAMC,UAF9D,cAEcJ,EAFd,OAGQK,EAAQE,QAAQC,QAChB3B,IAAM4B,QAAN,UAAiBN,EAAjB,iCAAsD,CAClDnB,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,UAZnB,kBAceQ,EAASC,MAdxB,kCAgBQvB,EAAY,EAAD,GAAImB,GAhBvB,0DAFsC,yDAuB7Ba,EAAgBf,YACzB,yBADyC,uCAEzC,WAAOgB,EAAId,GAAX,eAAAC,EAAA,+EAE+BvB,IAAMqC,OAAN,oBAA0BD,IAFzD,cAEcX,EAFd,OAGQnB,IAAM4B,QAAN,sCAAqD,CACjDzB,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,UAXnB,kBAaeQ,EAASC,MAbxB,gCAeQvB,EAAY,EAAD,GAAImB,GAfvB,yDAFyC,yDCrDvCgB,EAAgB,SAAAC,GAClBA,EAAMC,WAAY,GAIhBC,EAAiB,SAACF,EAAOG,GAC3BH,EAAMC,WAAY,EAClBD,EAAMhC,MAAQmC,EAAOC,SA4CZC,EAzCQC,YAAY,CAC7BjB,KAAM,WACNkB,aAAc,CACVC,MAAO,GACPP,WAAW,EACXQ,WAAY,KACZzC,MAAO,MAEX0C,eAAa,mBACR9B,EAAc+B,QAAUZ,GADhB,cAERnB,EAAcgC,WAFN,SAEiBZ,EAAOG,GAC7BH,EAAMC,WAAY,EAClBD,EAAMhC,MAAQ,KACdgC,EAAMQ,MAAQL,EAAOC,WALhB,cAORxB,EAAciC,SAAWX,GAPjB,cAQRd,EAAWuB,QAAUZ,GARb,cASRX,EAAWwB,WATH,SAScZ,EAAOG,GAC1BH,EAAMC,WAAY,EAClBD,EAAMhC,MAAQ,KACdgC,EAAMQ,MAAMM,KAAKX,EAAOC,YAZnB,cAcRhB,EAAWyB,SAAWX,GAdd,cAeRN,EAAce,SAfN,SAegBX,EAAOG,GAC5BY,QAAQC,IAAI,kBACZD,QAAQC,IAAIb,GACZH,EAAMS,YAAcN,EAAOc,KAAKC,OAlB3B,cAoBRtB,EAAcgB,WApBN,SAoBiBZ,EAAOG,GAC7BH,EAAMS,WAAa,KACnBT,EAAMhC,MAAQ,KACd,IAAMmD,EAAQnB,EAAMQ,MAAMY,WAAU,SAAAC,GAAO,OAAKA,EAAQxB,MAAQM,EAAOC,QAAQP,MAC/EG,EAAMQ,MAAMc,OAAOH,EAAO,MAxBrB,cA0BRvB,EAAciB,UA1BN,SA0BiBb,EAAOG,GAC7BH,EAAMS,WAAa,KACnBT,EAAMhC,MAAQmC,EAAOC,WA5BhB,KAiC2BmB,QCpDtCC,EAAclB,YAAY,CAC5BjB,KAAM,SACNkB,aAAc,GACdkB,SAAU,CACNC,aAAc,SAAC1B,EAAOG,GAClB,OAAOA,EAAOC,YAKZsB,EAAgBF,EAAYG,QAA5BD,aAEDE,EAAgBJ,EAAYD,QCV5BM,EAAQC,YAAe,CAChCP,QAAS,CACLQ,SAAU1B,EACV2B,OAAQJ,K,iBCPHK,EAAc,SAACjC,GAAD,OAAWA,EAAM+B,SAASvB,OACxC0B,EAAY,SAAClC,GAAD,OAAWA,EAAMgC,QAC7BG,EAAe,SAAAnC,GAAK,OAAIA,EAAM+B,SAAS9B,WACvCmC,EAAgB,SAAApC,GAAK,OAAIA,EAAM+B,SAAStB,Y,eC4CtC4B,EAxCK,WAChB,IAAMN,EAAWO,YAAYL,GACvBhC,EAAYqC,YAAYH,GACxBI,EAAWC,cACXjD,EAAUkD,mBAahB,OACQ,uBAAMC,UAAWC,IAAOC,KAAMC,SAbjB,SAACC,GAClBA,EAAMC,iBACN,IAAM1D,EAAOyD,EAAME,OAAO,GAAGC,MACvB3D,EAAQwD,EAAME,OAAO,GAAGC,MACNlB,EAASmB,MAAK,SAAC7B,GAAD,OAAaA,EAAQhC,KAAK8D,gBAAkB9D,EAAK8D,iBAEnFC,MAAM,GAAD,OAAI/D,EAAJ,6BAELkD,EAASnD,EAAW,CAACC,OAAMC,QAAOC,cAKoB8D,IAAK9D,EAA3D,UACI,0CAEI,uBACI+D,KAAK,OACLjE,KAAK,OACLkE,UAAQ,OAGhB,4CAEI,uBACID,KAAK,MACLjE,KAAK,QACLkE,UAAQ,OAGhB,wBAAQD,KAAK,SAASE,SAAUvD,EAAhC,SAA4CA,EAAY,aAAe,oB,iBCHxEwD,EA5BK,WAChB,IAAM1B,EAAWO,YAAYL,GACvBD,EAASM,YAAYJ,GACrBzB,EAAa6B,YAAYF,GACzBG,EAAWC,cACjBkB,qBAAU,WACNnB,EAAS3D,OACV,CAAC2D,IACJ,IAAMoB,EAbkB,SAAC3B,EAAQD,GACjC,IAAM6B,EAAmB5B,EAAOmB,cAChC,OAAOpB,EAASC,QAAO,SAACX,GAAD,OAAaA,EAAQhC,KAAK8D,cAAcU,SAASD,MAW/CE,CAAoB9B,EAAQD,GAErD,OACI,mCACI,oBAAIW,UAAWC,IAAOoB,KAAtB,SACKJ,EAAiBK,KAAI,SAAC3C,GAAD,OAClB,+BACKA,EAAQhC,KADb,KACqBgC,EAAQ/B,MACzB,wBAAQgE,KAAK,SACLE,UAAWnC,EAAQxB,MAAQY,EAC3BwD,QAAS,kBAAM1B,EAAS3C,EAAcyB,EAAQxB,MAFtD,UAGMwB,EAAQxB,MAAQY,EAAa,cAAgB,aAL9CY,EAAQxB,Y,iBCLtBqE,EAdA,WACX,IAAM3B,EAAWC,cACXR,EAASM,YAAYJ,GAI3B,OACI,wBAAOQ,UAAWC,IAAOwB,MAAzB,mCAEI,uBAAOb,KAAK,OAAOL,MAAOjB,EAAQoC,SAAU,SAACtB,GAAD,OAN5BG,EAMsDH,EAAME,OAAOC,WALvFV,EAASb,EAAauB,IADH,IAACA,S,iBCWboB,EAbH,WACR,OACI,sBAAK3B,UAAWC,IAAO2B,UAAvB,UACI,2CACA,cAAC,EAAD,IACA,0CACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,IAAD,QCTZC,IAASC,OACL,cAAC,IAAD,CAAU3C,MAAOA,EAAjB,SACI,cAAC,EAAD,MAEF4C,SAASC,eAAe,W","file":"static/js/main.1d014922.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__16xz_\"};","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport {toast} from \"react-toastify\";\n\n\naxios.defaults.baseURL = 'https://64db6c66593f57e435b0f12d.mockapi.io/api';\n\nconst handleError = (e, api) => {\n    toast.error(e.message, {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\",\n    });\n    return api.rejectWithValue(e.message);\n}\n\nexport const fetchContacts = createAsyncThunk(\n    \"contacts/fetchAll\",\n    async (_, thunkAPI) => {\n        try {\n            const response = await axios.get(\"/contacts\");\n            return response.data;\n        } catch (e) {\n            handleError(e, thunkAPI)\n        }\n    }\n);\n\nexport const addContact = createAsyncThunk(\n    \"contacts/addContact\",\n    async ({name, phone, formRef}, thunkAPI) => {\n        try {\n            const response = await axios.post(\"/contacts\", {name, phone} );\n            formRef.current.reset();\n            toast.success(`${name} has been successfully added!`, {\n                position: \"top-right\",\n                autoClose: 2000,\n                hideProgressBar: true,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                theme: \"light\",\n            });\n            return response.data;\n        } catch (e) {\n            handleError(e, thunkAPI)\n        }\n    }\n);\n\nexport const deleteContact = createAsyncThunk(\n    \"contacts/deleteContact\",\n    async (id, thunkAPI) => {\n        try {\n            const response = await axios.delete(`/contacts/${id}`);\n            toast.success(`User has been successfully deleted!`, {\n                position: \"top-right\",\n                autoClose: 2000,\n                hideProgressBar: true,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                theme: \"light\",\n            });\n            return response.data;\n        } catch (e) {\n            handleError(e, thunkAPI)\n        }\n    }\n);\n","import {createSlice} from '@reduxjs/toolkit';\nimport {fetchContacts, addContact, deleteContact} from \"./operations\";\n\nconst handlePending = state => {\n    state.isLoading = true;\n};\n\n\nconst handleRejected = (state, action) => {\n    state.isLoading = false;\n    state.error = action.payload;\n};\n\nconst contactSlice = createSlice({\n    name: 'contacts',\n    initialState: {\n        items: [],\n        isLoading: false,\n        deletingId: null,\n        error: null\n    },\n    extraReducers: {\n        [fetchContacts.pending]: handlePending,\n        [fetchContacts.fulfilled](state, action) {\n            state.isLoading = false;\n            state.error = null;\n            state.items = action.payload;\n        },\n        [fetchContacts.rejected]: handleRejected,\n        [addContact.pending]: handlePending,\n        [addContact.fulfilled](state, action) {\n            state.isLoading = false;\n            state.error = null;\n            state.items.push(action.payload);\n        },\n        [addContact.rejected]: handleRejected,\n        [deleteContact.pending] (state, action) {\n            console.log(\"action pending\")\n            console.log(action)\n            state.deletingId = +action.meta.arg;\n        },\n        [deleteContact.fulfilled](state, action) {\n            state.deletingId = null;\n            state.error = null;\n            const index = state.items.findIndex(contact => +contact.id === +action.payload.id);\n            state.items.splice(index, 1);\n        },\n        [deleteContact.rejected] (state, action) {\n            state.deletingId = null;\n            state.error = action.payload;\n        },\n    }\n});\n\nexport const contactsReducer = contactSlice.reducer;\n","import {createSlice} from '@reduxjs/toolkit';\n\nconst filterSlice = createSlice({\n    name: 'filter',\n    initialState: '',\n    reducers: {\n        updateFilter: (state, action) => {\n            return action.payload;\n        },\n    },\n});\n\nexport const {updateFilter} = filterSlice.actions;\n\nexport const filterReducer = filterSlice.reducer;\n","import {configureStore} from '@reduxjs/toolkit';\nimport {contactsReducer} from './contactSlice';\nimport {filterReducer} from \"./filterSlice\";\n\nexport const store = configureStore({\n    reducer: {\n        contacts: contactsReducer,\n        filter: filterReducer,\n    },\n});\n\n","export const getContacts = (state) => state.contacts.items\nexport const getFilter = (state) => state.filter;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getDeletingId = state => state.contacts.deletingId;\nexport const getError = state => state.contacts.error;\n\n","import React, {useRef} from 'react';\nimport styles from './ContactForm.module.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getContacts, getIsLoading} from \"../../redux/selectors\";\nimport {addContact} from \"../../redux/operations\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst ContactForm = () => {\n    const contacts = useSelector(getContacts);\n    const isLoading = useSelector(getIsLoading);\n    const dispatch = useDispatch();\n    const formRef = useRef();\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const name = event.target[0].value;\n        const phone = event.target[1].value;\n        const existingContact = contacts.find((contact) => contact.name.toLowerCase() === name.toLowerCase());\n        if (existingContact) {\n            alert(`${name} is already in contacts.`);\n        } else {\n            dispatch(addContact({name, phone, formRef}));\n        }\n    };\n\n    return (\n            <form className={styles.form} onSubmit={handleSubmit} ref={formRef}>\n                <label>\n                    Name:\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        required\n                    />\n                </label>\n                <label>\n                    Number:\n                    <input\n                        type=\"tel\"\n                        name=\"phone\"\n                        required\n                    />\n                </label>\n                <button type=\"submit\" disabled={isLoading}>{isLoading ? 'Loading...' : 'Add contact'}</button>\n            </form>\n    );\n};\n\nexport default ContactForm;\n","import React, {useEffect} from 'react';\nimport styles from './ContactList.module.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getContacts, getDeletingId, getFilter} from \"../../redux/selectors\";\nimport {deleteContact, fetchContacts} from \"../../redux/operations\";\n\nconst getFilteredContacts = (filter, contacts) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) => contact.name.toLowerCase().includes(normalizedFilter));\n};\n\nconst ContactList = () => {\n    const contacts = useSelector(getContacts);\n    const filter = useSelector(getFilter);\n    const deletingId = useSelector(getDeletingId);\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n    const filteredContacts = getFilteredContacts(filter, contacts);\n\n    return (\n        <>\n            <ul className={styles.list}>\n                {filteredContacts.map((contact) => (\n                    <li key={contact.id}>\n                        {contact.name}: {contact.phone}\n                        <button type=\"button\"\n                                disabled={+contact.id === +deletingId}\n                                onClick={() => dispatch(deleteContact(contact.id))}>\n                            {+contact.id === +deletingId ? 'Deleting...' : 'Delete'}\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </>\n    );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport styles from './Filter.module.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getFilter} from \"../../redux/selectors\";\nimport {updateFilter} from \"../../redux/filterSlice\";\n\nconst Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(getFilter);\n    const onChangeFilter = (value) => {\n        dispatch(updateFilter(value))\n    }\n    return (\n        <label className={styles.label}>\n            Find contacts by name:\n            <input type=\"text\" value={filter} onChange={(event) => onChangeFilter(event.target.value)}/>\n        </label>\n    );\n};\n\nexport default Filter;\n","import React from 'react';\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport ContactList from \"../ContactList/ContactList\";\nimport Filter from \"../Filter/Filter\";\nimport styles from './App.module.css';\nimport {ToastContainer} from \"react-toastify\";\n\nconst App = () => {\n    return (\n        <div className={styles.container}>\n            <h1>Phonebook</h1>\n            <ContactForm/>\n            <h2>Contacts</h2>\n            <Filter/>\n            <ContactList/>\n            <ToastContainer/>\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {store} from './redux/store';\nimport App from './components/App/App';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>\n    , document.getElementById('root'));\n\n"],"sourceRoot":""}