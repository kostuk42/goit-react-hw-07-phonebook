{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/App/App.module.css","redux/operations.js","redux/contactSlice.js","redux/filterSlice.js","redux/store.js","redux/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App/App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","thunkAPI","a","get","response","data","rejectWithValue","message","addContact","contact","post","deleteContact","id","delete","handlePending","state","isLoading","handleRejected","action","error","payload","contactsReducer","createSlice","name","initialState","items","extraReducers","pending","fulfilled","rejected","push","index","findIndex","splice","reducer","filterSlice","reducers","updateFilter","actions","filterReducer","store","configureStore","contacts","filter","getContacts","getFilter","getIsLoading","getError","ContactForm","useSelector","dispatch","useDispatch","className","styles","form","onSubmit","event","preventDefault","target","value","number","find","toLowerCase","alert","type","required","ContactList","useEffect","filteredContacts","normalizedFilter","includes","getFilteredContacts","list","map","phone","onClick","Filter","label","onChange","App","container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e377c852.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__16xz_\"};","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\naxios.defaults.baseURL = 'https://64db6c66593f57e435b0f12d.mockapi.io/api'\n\nexport const fetchContacts = createAsyncThunk(\n    \"contacts/fetchAll\",\n    async (_, thunkAPI) => {\n        try {\n            const response = await axios.get(\"/contacts\");\n            return response.data;\n        } catch (e) {\n            return thunkAPI.rejectWithValue(e.message);\n        }\n    }\n);\n\nexport const addContact = createAsyncThunk(\n    \"contacts/addContact\",\n    async (contact, thunkAPI) => {\n        try {\n            const response = await axios.post(\"/contacts\", contact);\n            return response.data;\n        } catch (e) {\n            return thunkAPI.rejectWithValue(e.message);\n        }\n    }\n);\n\nexport const deleteContact = createAsyncThunk(\n    \"contacts/deleteContact\",\n    async (id, thunkAPI) => {\n        try {\n            const response = await axios.delete(`/contacts/${id}`);\n            return response.data;\n        } catch (e) {\n            return thunkAPI.rejectWithValue(e.message);\n        }\n    }\n);\n","import {createSlice} from '@reduxjs/toolkit';\nimport {fetchContacts, addContact, deleteContact} from \"./operations\";\n\nconst handlePending = state => {\n    state.isLoading = true;\n};\n\nconst handleRejected = (state, action) => {\n    state.isLoading = false;\n    state.error = action.payload;\n};\n\nconst contactSlice = createSlice({\n    name: 'contacts',\n    initialState: {\n        items: [],\n        isLoading: false,\n        error: null\n    },\n    extraReducers: {\n        [fetchContacts.pending]: handlePending,\n        [fetchContacts.fulfilled](state, action) {\n            state.isLoading = false;\n            state.error = null;\n            state.items = action.payload;\n        },\n        [fetchContacts.rejected]: handleRejected,\n        [addContact.pending]: handlePending,\n        [addContact.fulfilled](state, action) {\n            state.isLoading = false;\n            state.error = null;\n            state.items.push(action.payload);\n        },\n        [addContact.rejected]: handleRejected,\n        [deleteContact.pending]: handlePending,\n        [deleteContact.fulfilled](state, action) {\n            state.isLoading = false;\n            state.error = null;\n            const index = state.items.findIndex(contact => +contact.id === +action.payload.id);\n            state.items.splice(index, 1);\n        },\n        [deleteContact.rejected]: handleRejected,\n    }\n});\n\nexport const contactsReducer = contactSlice.reducer;\n","import {createSlice} from '@reduxjs/toolkit';\n\nconst filterSlice = createSlice({\n    name: 'filter',\n    initialState: '',\n    reducers: {\n        updateFilter: (state, action) => {\n            return action.payload;\n        },\n    },\n});\n\nexport const {updateFilter} = filterSlice.actions;\n\nexport const filterReducer = filterSlice.reducer;\n","import {configureStore} from '@reduxjs/toolkit';\nimport {contactsReducer} from './contactSlice';\nimport {filterReducer} from \"./filterSlice\";\n\nexport const store = configureStore({\n    reducer: {\n        contacts: contactsReducer,\n        filter: filterReducer,\n    },\n});\n\n","export const getContacts = (state) => state.contacts.items\nexport const getFilter = (state) => state.filter;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n\n","import React from 'react';\nimport styles from './ContactForm.module.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getContacts} from \"../../redux/selectors\";\nimport {addContact} from \"../../redux/operations\";\n\nconst ContactForm = () => {\n    const contacts = useSelector(getContacts);\n    const dispatch = useDispatch();\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const name = event.target[0].value;\n        const number = event.target[1].value;\n        const existingContact = contacts.find((contact) => contact.name.toLowerCase() === name.toLowerCase());\n        if (existingContact) {\n            alert(`${name} is already in contacts.`);\n        } else {\n            dispatch(addContact({name, number}));\n            event.target[0].value = '';\n            event.target[1].value = '';\n\n        }\n    };\n\n    return (\n        <form className={styles.form} onSubmit={handleSubmit}>\n            <label>\n                Name:\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    required\n                />\n            </label>\n            <label>\n                Number:\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    required\n                />\n            </label>\n            <button type=\"submit\">Add contact</button>\n        </form>\n    );\n};\n\nexport default ContactForm;\n","import React, {useEffect} from 'react';\nimport styles from './ContactList.module.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getContacts, getError, getFilter, getIsLoading} from \"../../redux/selectors\";\nimport {deleteContact, fetchContacts} from \"../../redux/operations\";\n\nconst getFilteredContacts = (filter, contacts) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) => contact.name.toLowerCase().includes(normalizedFilter));\n};\n\nconst ContactList = () => {\n    const contacts = useSelector(getContacts);\n    const filter = useSelector(getFilter);\n    const isLoading = useSelector(getIsLoading);\n    const error = useSelector(getError);\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n    const filteredContacts = getFilteredContacts(filter, contacts);\n\n    return (\n        <>\n            {isLoading && !error && <b>Request in progress...</b>}\n            {!isLoading && <ul className={styles.list}>\n                {filteredContacts.map((contact) => (\n                    <li key={contact.id}>\n                        {contact.name}: {contact.phone}\n                        <button type=\"button\" onClick={() => dispatch(deleteContact(contact.id))}>\n                            Delete\n                        </button>\n                    </li>\n                ))}\n            </ul>}\n        </>\n\n    );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport styles from './Filter.module.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getFilter} from \"../../redux/selectors\";\nimport {updateFilter} from \"../../redux/filterSlice\";\n\nconst Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(getFilter);\n    const onChangeFilter = (value) => {\n        dispatch(updateFilter(value))\n    }\n    return (\n        <label className={styles.label}>\n            Find contacts by name:\n            <input type=\"text\" value={filter} onChange={(event) => onChangeFilter(event.target.value)}/>\n        </label>\n    );\n};\n\nexport default Filter;\n","import React from 'react';\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport ContactList from \"../ContactList/ContactList\";\nimport Filter from \"../Filter/Filter\";\nimport styles from './App.module.css';\n\nconst App = () => {\n    return (\n        <div className={styles.container}>\n            <h1>Phonebook</h1>\n            <ContactForm/>\n            <h2>Contacts</h2>\n            <Filter/>\n            <ContactList/>\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {store} from './redux/store';\nimport App from './components/App/App';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>\n    , document.getElementById('root'));\n\n"],"sourceRoot":""}